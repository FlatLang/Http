package flatlang/http

import flatlang/datastruct/HashMap

class {
  public async run() -> Response => null {
    external {
      var headers = {};
    }

    native var Char[] data

    headers.forEach((pair) => {
      external {
        headers[#{pair.key.chars.data}] = #{pair.value.chars.data};
      }
    })

    external {
      try {
        const response = await #{Http.Global.axios}({
          method: #{method.chars.data},
          url: #{url.chars.data},
          headers: headers
        });

        if (typeof response.data === 'string') {
          #{data} = response.data;
        } else if (typeof response.data === 'object') {
          #{data} = JSON.stringify(response.data)
        } else {
          console.error("Failed for content-type", typeof response.data);
        }
      } catch (e) {
        console.error(e);
      }
    }

    return Response(
      data: String(data)
    )
  }
}